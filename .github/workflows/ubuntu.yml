name: "CI: Ubuntu"

on: [ push, pull_request ]

env:
  DISPLAY: :99.0
  SDL_VIDEODRIVER: x11
  VCPKG_ROOT: ${{github.workspace}}/vcpkg
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg/bincache
  VCPKG_COMMIT_ID: 772fe6cbce530cb3a5f0fee67b57e9861676e5d0

jobs:
  ubuntu-latest-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: lukka/get-cmake@latest

      - name: Update packages
        shell: bash
        run: sudo apt update

      - name: Install graphics drivers
        shell: bash
        run: sudo apt-get install libegl1-mesa-dev libgles2-mesa-dev libasound2-dev libpulse-dev libxmu-dev libxi-dev libgl-dev

      - name: Install GCC 10
        shell: bash
        run: sudo apt install gcc-10 g++-10

      - name: Install xvfb
        shell: bash
        run: sudo apt install xvfb

      - name: Emulate video device
        shell: bash
        run: /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX;

      - name: Wait a bit for video device
        shell: bash
        run: sleep 3

      - name: Cache Vcpkg
        id: restore-vcpkg-and-artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}\buildtrees
            !${{env.VCPKG_ROOT}}\packages
            !${{env.VCPKG_ROOT}}\downloads
            !${{env.VCPKG_ROOT}}\installed
          key: ${{env.VCPKG_COMMIT_ID}}-${{hashFiles('vcpkg.json')}}-x64-tactile-linux

      - name: Install Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

      - name: Create directory ${{env.VCPKG_DEFAULT_BINARY_CACHE}}
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: mkdir -p ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Make Tactile triplet file available to Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: mv "${{github.workspace}}/cmake/x64-tactile-linux.cmake" "${{env.VCPKG_ROOT}}/triplets/community/x64-tactile-linux.cmake"

      - name: Create build directory
        shell: bash
        run: mkdir -p build

      - name: Generate build files
        working-directory: ./build
        shell: bash
        env:
          CC: gcc-10
          CXX: g++-10
        run: cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja

      - name: Build
        working-directory: ./build
        shell: bash
        env:
          CC: gcc-10
          CXX: g++-10
        run: ninja

      - name: Run tests
        working-directory: ./build/build
        shell: bash
        run: ./TactileTests