name: "CI: Ubuntu"

on: [ push, pull_request ]

env:
  SDL_VERSION: 2.0.16
  SDL_VIDEODRIVER: x11
  DISPLAY: :99.0
  PROTOBUF_VERSION: 3.18.1

jobs:
  ubuntu-latest-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: lukka/get-cmake@latest

      - name: Update packages
        shell: bash
        run: sudo apt update

      - name: Install GLEW
        shell: bash
        run: sudo apt install libglew-dev

      - name: Install GCC 10
        shell: bash
        run: sudo apt install gcc-10 g++-10

      - name: Emulate video device
        shell: bash
        run: |
          sudo apt install xvfb
          /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 800x600x24 -ac +extension GLX;
          sleep 3

      - name: Cache SDL2
        id: cache-sdl2
        uses: actions/cache@main
        with:
          path: SDL2-${{env.SDL_VERSION}}
          key: SDL2-${{env.SDL_VERSION}}

      - name: Build SDL2
        shell: bash
        if: steps.cache-sdl2.outputs.cache-hit != 'true'
        env:
          CC: gcc-10
          CXX: g++-10
        run: |
          curl -L https://www.libsdl.org/release/SDL2-${{env.SDL_VERSION}}.tar.gz | tar xz
          cd SDL2-${{env.SDL_VERSION}}
          ./configure
          make -j 8

      - name: Install SDL2
        shell: bash
        run: |
          cd SDL2-${{env.SDL_VERSION}}
          sudo make install

      - name: Install SDL2_image
        shell: bash
        run: sudo apt install libsdl2-image-dev

      - name: Install SDL2_ttf
        shell: bash
        run: sudo apt install libsdl2-ttf-dev

      - name: Cache Protobuf
        id: cache-protobuf
        uses: actions/cache@main
        with:
          path: protobuf-${{env.PROTOBUF_VERSION}}
          key: protobuf-${{env.PROTOBUF_VERSION}}

      - name: Build Protobuf
        shell: bash
        if: steps.cache-protobuf.outputs.cache-hit != 'true'
        run: |
          curl -L https://github.com/protocolbuffers/protobuf/releases/download/v${{env.PROTOBUF_VERSION}}/protobuf-cpp-${{env.PROTOBUF_VERSION}}.tar.gz | tar xz
          cd protobuf-${{env.PROTOBUF_VERSION}}
          ./configure
          make -j 8

      - name: Install Protobuf
        shell: bash
        run: |
          cd protobuf-${{env.PROTOBUF_VERSION}}
          sudo make install
          sudo ldconfig

      - name: Create build directory
        shell: bash
        run: mkdir -p build

      - name: Generate build files
        working-directory: ./build
        shell: bash
        env:
          CC: gcc-10
          CXX: g++-10
        run: cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja

      - name: Build
        working-directory: ./build
        shell: bash
        env:
          CC: gcc-10
          CXX: g++-10
        run: ninja

      - name: Run tests
        working-directory: ./build/build
        shell: bash
        run: ./TactileTests