name: "CI: Ubuntu"

on: [ push ]

env:
  VCPKG_ROOT: ${{github.workspace}}/vcpkg
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg/bincache
  VCPKG_CACHE_EDITION: 1

jobs:
  ubuntu-latest-test:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, '[skip-ci]') == false
    steps:
      - uses: actions/checkout@v3
      - uses: lukka/get-cmake@latest
      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install ninja-build \
                           gcc-12 \
                           g++-12 \
                           libxmu-dev \
                           libxi-dev \
                           libgl-dev

      - name: Configure default compilers
        run: |
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12
          update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 12

      - name: Cache Vcpkg
        id: restore-vcpkg-and-artifacts
        uses: actions/cache@v3
        with:
          path: |
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}\buildtrees
            !${{env.VCPKG_ROOT}}\packages
            !${{env.VCPKG_ROOT}}\downloads
            !${{env.VCPKG_ROOT}}\installed
          key: tactile-linux-vcpkg-${{hashFiles('vcpkg.json')}}-${{env.VCPKG_CACHE_EDITION}}

      - name: Install Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics
          sudo ./vcpkg/vcpkg integrate install

      - name: Create directory ${{env.VCPKG_DEFAULT_BINARY_CACHE}}
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        run: mkdir -p ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Generate build files
        run: |
          mkdir build && cd build
          cmake .. -GNinja \
                   -DCMAKE_BUILD_TYPE=Debug \
                   -DTACTILE_TREAT_WARNINGS_AS_ERRORS=OFF

      - name: Build
        run: ninja -C build

      - name: Run tests
        working-directory: ./build/test
        run: ./TactileTests