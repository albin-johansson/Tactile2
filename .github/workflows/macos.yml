name: "CI: macOS"

on: [ push, pull_request ]

env:
  CC: /usr/local/opt/llvm/bin/clang
  CXX: /usr/local/opt/llvm/bin/clang++
  VCPKG_ROOT: ${{github.workspace}}/vcpkg
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg/bincache
  VCPKG_COMMIT_ID: 70033dbb31527fb3e69654731f540f59c87787f9

jobs:
  macos-latest-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@main

      - name: Update packages
        shell: bash
        run: brew update

      - name: Install CMake
        shell: bash
        run: brew install cmake

      - name: Install Ninja
        shell: bash
        run: brew install ninja

      - name: Install LLVM
        shell: bash
        run: brew install llvm

      - name: Install GLFW
        shell: bash
        run: brew install glfw

      - name: Cache Vcpkg
        id: restore-vcpkg-and-artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}\buildtrees
            !${{env.VCPKG_ROOT}}\packages
            !${{env.VCPKG_ROOT}}\downloads
            !${{env.VCPKG_ROOT}}\installed
          key: ${{env.VCPKG_COMMIT_ID}}-${{hashFiles('vcpkg.json')}}-x64-tactile-osx

      - name: Install Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

      - name: Create directory ${{env.VCPKG_DEFAULT_BINARY_CACHE}}
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: mkdir -p ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Make Tactile triplet file available to Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: mv "${{github.workspace}}/cmake/x64-tactile-osx.cmake" \
                "${{env.VCPKG_ROOT}}/triplets/community/x64-tactile-osx.cmake"

      - name: Make build directory
        shell: bash
        run: mkdir build

      - name: Generate build files
        working-directory: ./build
        shell: bash
        run: cmake .. -DCMAKE_BUILD_TYPE=Debug \
                      -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake \
                      -DVCPKG_TARGET_TRIPLET=x64-tactile-osx \
                      -GNinja

      - name: Build
        working-directory: ./build
        shell: bash
        run: ninja