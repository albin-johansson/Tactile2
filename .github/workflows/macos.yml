name: "CI: macOS"

on: [ push, pull_request ]

env:
  CC: /usr/local/opt/llvm/bin/clang
  CXX: /usr/local/opt/llvm/bin/clang++
  PROTOBUF_VERSION: 3.18.1

jobs:
  macos-latest-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@main

      - name: Update packages
        shell: bash
        run: brew update

      - name: Install Ninja
        shell: bash
        run: brew install ninja

      - name: Install CMake
        shell: bash
        run: brew install cmake

      - name: Install LLVM
        shell: bash
        run: brew install llvm

      - name: Install mpg123
        shell: bash
        run: brew install mpg123

      - name: Install GLFW
        shell: bash
        run: brew install glfw

      - name: Install GLEW
        shell: bash
        run: brew install glew

      - name: Install SDL2
        shell: bash
        run: brew install SDL2

      - name: Install SDL2_image
        shell: bash
        run: brew install SDL2_image

      - name: Install SDL2_ttf
        shell: bash
        run: brew install SDL2_ttf

      - name: Cache Protobuf
        id: cache-protobuf
        uses: actions/cache@main
        with:
          path: protobuf-osx-${{env.PROTOBUF_VERSION}}
          key: protobuf-osx-${{env.PROTOBUF_VERSION}}

      - name: Build Protobuf
        shell: bash
        if: steps.cache-protobuf.outputs.cache-hit != 'true'
        run: |
          brew install autoconf
          brew install automake
          brew install libtool
          curl -L https://github.com/protocolbuffers/protobuf/releases/download/v${{env.PROTOBUF_VERSION}}/protobuf-cpp-${{env.PROTOBUF_VERSION}}.tar.gz | tar xz
          mv protobuf-${{env.PROTOBUF_VERSION}} protobuf-osx-${{env.PROTOBUF_VERSION}}
          cd protobuf-osx-${{env.PROTOBUF_VERSION}}
          ./configure
          make -j 8

      - name: Install Protobuf
        shell: bash
        run: |
          cd protobuf-osx-${{env.PROTOBUF_VERSION}}
          sudo make install
          sudo ldconfig

      - name: Make build directory
        shell: bash
        run: mkdir build

      - name: Generate build files
        working-directory: ./build
        shell: bash
        run: cmake .. -DCMAKE_BUILD_TYPE=Debug -GNinja

      - name: Build
        working-directory: ./build
        shell: bash
        run: ninja