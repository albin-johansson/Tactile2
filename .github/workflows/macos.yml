name: "CI: macOS"

on: [ push, pull_request ]

env:
  CC: /usr/local/opt/llvm/bin/clang
  CXX: /usr/local/opt/llvm/bin/clang++
  VCPKG_ROOT: ${{github.workspace}}/vcpkg
  VCPKG_TARGET_TRIPLET: x64-osx
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg/bincache
  VCPKG_COMMIT_ID: 772fe6cbce530cb3a5f0fee67b57e9861676e5d0
  BOOST_ROOT: /opt/homebrew/Cellar/boost/1.76.0

jobs:
  macos-latest-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@main

      - name: Update packages
        shell: bash
        run: brew update

      - name: Install CMake
        shell: bash
        run: brew install cmake

      - name: Install Ninja
        shell: bash
        run: brew install ninja

      - name: Install LLVM
        shell: bash
        run: brew install llvm

      - name: Install GLFW
        shell: bash
        run: brew install glfw

      - name: Install Boost
        shell: bash
        run: brew install boost

      - name: Cache Vcpkg
        id: restore-vcpkg-and-artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{env.VCPKG_ROOT}}
            !${{env.VCPKG_ROOT}}\buildtrees
            !${{env.VCPKG_ROOT}}\packages
            !${{env.VCPKG_ROOT}}\downloads
            !${{env.VCPKG_ROOT}}\installed
          key: ${{env.VCPKG_COMMIT_ID}}-${{hashFiles('vcpkg.json')}}-x64-tactile-osx

      - name: Install Vcpkg
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg
          ./vcpkg/bootstrap-vcpkg.sh -disableMetrics

      - name: Create directory ${{env.VCPKG_DEFAULT_BINARY_CACHE}}
        if: steps.restore-vcpkg-and-artifacts.outputs.cache-hit != 'true'
        shell: bash
        run: mkdir -p ${{env.VCPKG_DEFAULT_BINARY_CACHE}}

      - name: Make build directory
        shell: bash
        run: mkdir build

      - name: Generate build files
        working-directory: ./build
        shell: bash
        run: cmake .. -DCMAKE_BUILD_TYPE=Debug -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TARGET_TRIPLET}} -GNinja

      - name: Build
        working-directory: ./build
        shell: bash
        run: ninja

      - name: Run tests
        working-directory: ./build/build
        shell: bash
        run: ./TactileTests