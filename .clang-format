BasedOnStyle: Google

Language: Cpp
Standard: c++20

AlignTrailingComments: true
AlignConsecutiveDeclarations: None
AlignConsecutiveBitFields: Consecutive
QualifierAlignment: Left

ColumnLimit: 90
IndentWidth: 2

DerivePointerAlignment: false
PointerAlignment: Left

IndentRequires: true
IndentCaseLabels: true

IndentAccessModifiers: false
AccessModifierOffset: -1

NamespaceIndentation: None
FixNamespaceComments: true

EmptyLineBeforeAccessModifier: Always
SpaceAfterCStyleCast: true

AllowAllArgumentsOnNextLine: false
AllowAllParametersOfDeclarationOnNextLine: false
AllowAllConstructorInitializersOnNextLine: false

PackConstructorInitializers: Never
BinPackParameters: false
BinPackArguments: false

AllowShortFunctionsOnASingleLine: None
AllowShortIfStatementsOnASingleLine: Never
AllowShortBlocksOnASingleLine: Empty
AllowShortLambdasOnASingleLine: All
AllowShortEnumsOnASingleLine: false
AllowShortLoopsOnASingleLine: false

BreakBeforeBinaryOperators: None
BreakBeforeTernaryOperators: true
BreakBeforeConceptDeclarations: true

SpaceBeforeCpp11BracedList: true

BreakBeforeBraces: Custom
BraceWrapping:
  AfterCaseLabel: false
  AfterClass: true
  AfterStruct: true
  AfterControlStatement: Never
  AfterEnum: true
  AfterFunction: true
  AfterNamespace: false
  AfterObjCDeclaration: false
  AfterUnion: false
  AfterExternBlock: false
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

BreakStringLiterals: true

BreakInheritanceList: BeforeComma
BreakConstructorInitializers: BeforeComma

SortIncludes: CaseSensitive
IncludeBlocks: Regroup
IncludeCategories:
  # Standard headers, located in <> with no extension.
  - Regex: '<([A-Za-z0-9\_\-]+)>'
    SortPriority: 1
    Priority: 1

  # Headers in <> with extension and optional prefix.
  - Regex: '<([A-Za-z0-9\_\-]+\/)*(\.\.)*([A-Za-z0-9\_\-]+)\.([A-Za-z0-9\_\-]+)>'
    SortPriority: 2
    Priority: 2

  # Headers in "" with extension.
  - Regex: '"([A-Za-z0-9.\Q/-_\E])+"'
    SortPriority: 3
    Priority: 3